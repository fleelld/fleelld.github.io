{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"c语言学习笔记","slug":"c语言学习笔记","date":"2021-04-03T08:11:09.000Z","updated":"2021-04-05T14:21:25.946Z","comments":true,"path":"2021/04/03/c语言学习笔记/","link":"","permalink":"http://example.com/2021/04/03/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"利用/，%运算，取出任一个数X的个，百，千，万位数 取个位：x%10 取十位 ：x/10%10 取百位 ：x/100%10 取千位 ：x/1000%10 取万位 ：x/10000%10","text":"利用/，%运算，取出任一个数X的个，百，千，万位数 取个位：x%10 取十位 ：x/10%10 取百位 ：x/100%10 取千位 ：x/1000%10 取万位 ：x/10000%10 交换俩个数的值123456# include &lt;stdio.h&gt;void main()&#123; int a,b,t; a=2;b=3; t=a;a=b;b=t;&#125; 数学函数的使用 c标准函数 功能 cos(x) 求cos(x)的值 sin(x) 求sin(x)的值 fabs(x) 求x的绝对值 exp(x) 求e^x的绝对值 log(x) 求ln(x) 自增自减于运算符 表达式 步骤1 步骤2 ++i i=i+1 表达式的值=i i++ 表达式的值=i i=i+ m=(++i)((++i)的值为i+1)m=(i++)((i++)的值为i) 注:自增，自减运算符的操作符：变量(5++,(a+1)++都是错的) 优先级和结合方向 复合赋值运算符x*=2+3 —&gt; x = x *(2 + 3)注：右操作数必须作为一个整体，先与变量的原有值进行计算，结果更新新变量的值 printf函数格式控制符的综合应用 first second third forth fifth sixth 格式化输入函数 scanf(“%d,%d”,&amp;a,&amp;b)正确的输入格式：10，345 scanf(“a=%d,b=%d”,&amp;a,&amp;b)正确的输入格式：a=10，b=345注：scanf(“%d%d\\n”,&amp;a,&amp;b);这种是错的，不要进行换行 分数输入的案例1234567891011121314# include &lt;stdio.h&gt;void main()&#123; int n,m,i,j; float x; printf(&quot;请输入线索\\n向北走的路&quot;); scanf(&quot;%f&quot;,&amp;x); printf(&quot;再向东走(n/m):&quot;); scanf(&quot;%d/%d&quot;,&amp;n,&amp;m); printf(&quot;最后向北走(i/j):&quot;); scanf(&quot;%d/%d&quot;,&amp;i,&amp;j); printf(&quot;\\n请按以下路线行走\\n向北走%.2f\\n&quot;,x); printf(&quot;再向东走：%.2f米\\n&quot;,x*n/m); printf(&quot;最后向北走：%.2f米\\n&quot;,x*i/j);&#125;","categories":[],"tags":[]},{"title":"数组","slug":"数组","date":"2021-03-28T13:50:22.000Z","updated":"2021-03-28T14:33:10.322Z","comments":true,"path":"2021/03/28/数组/","link":"","permalink":"http://example.com/2021/03/28/%E6%95%B0%E7%BB%84/","excerpt":"数组的概念数组是指一组数据的集合，其中的每个数据被称作元素，在数组中可以存放任意类型的元素。数组是一种将一组数据存储在单个变量名下的优雅方式。","text":"数组的概念数组是指一组数据的集合，其中的每个数据被称作元素，在数组中可以存放任意类型的元素。数组是一种将一组数据存储在单个变量名下的优雅方式。 创建数组利用new创建数组12var 数组名 = new Array();var arr = new Array(); 利用数组字面量创建数组1var 数组名 = [&#x27;第一个数组元素&#x27;，&#x27;第二个数组元素&#x27;，&#x27;‘第三个数组元素&#x27;] 数组的字面量是方括号 [] 声明数组并赋值称为数组的初始化 这种字面量方式也是我们以后最多使用的方式 获取数组的元素123var arr = [1,2,3,];alert (arr[1])// 获取数组里的第二个元素 遍历数组案例11234var arr = [1,2,3,4];for(i = 0;i &lt; arr.length;i++)&#123; console.log(arr[i]);&#125; 案例2(数组的最大值)12345678var arr = [1,3,44,67,12,89];var max = arr[0];for(var i = 0;i &lt; arr.length; i++)&#123; if(arr[i] &gt; max)&#123; max = arr[i]; &#125;&#125;console.log(max); 数组中新增元素 修改length长度 修改数组索引 冒泡定律1234567891011var arr = [5,4,3,2,1];for (var i = 0; i &lt; arr.length; i++)&#123; for (var j = 0;j &lt;arr.length - i - 1;j++)&#123; if(arr[j]&gt;arr[j+1])&#123; var temp = arr[j]; arr[j] = arr[j+1]; arr [j+1] = temp; &#125; &#125;&#125;console.log(arr)","categories":[],"tags":[]},{"title":"循环笔记","slug":"循环","date":"2021-03-21T04:00:17.000Z","updated":"2021-04-03T08:11:42.590Z","comments":true,"path":"2021/03/21/循环/","link":"","permalink":"http://example.com/2021/03/21/%E5%BE%AA%E7%8E%AF/","excerpt":"循环目的重复执行某些语句","text":"循环目的重复执行某些语句 循环类型 for循环 while循环 do…while循环 for循环语法结构123for（初始化变量;条件表达式;操作表达式）&#123; //循环语句&#125; 执行过程 初始化变量，初始化操作在整个 for 循环只会执行一次。 执行条件表达式，如果为true，则执行循环体语句，否则退出循环，循环结束。 执行操作表达式，此时第一轮结束。 第二轮开始，直接去执行条件表达式（不再初始化变量），如果为 true ，则去执行循环体语句，否则退出循环。 继续执行操作表达式，第二轮结束。 后续跟第二轮一致，直至条件表达式为假，结束整个 for 循环。 自我总结for循环重复相同的代码，不相同的代码，某些相同操作都是计数器i有关 双重for循环语法结构12345for (外循环的初始; 外循环的条件; 外循环的操作表达式) &#123; for (内循环的初始; 内循环的条件; 内循环的操作表达式) &#123; 需执行的代码; &#125;&#125; 要点 内层循环可以看做外层循环的语句 内层循环执行的顺序也要遵循for循环的执行顺序 外层循环执行一次，内层循环要执行全部 案例 打印五行五列 打印正三角fi 打印倒三角 while循环结构式123while (条件表达式) &#123; // 循环体代码 &#125; 执行过程 先执行条件表达式，如果结果为 true，则执行循环体代码；如果为 false，则退出循环，执行后面代码 执行循环体代码 循环体代码执行完毕后，程序会继续判断执行条件表达式，如条件仍为true，则会继续执行循环体，直到循环条件为 false 时，整个循环过程才会结束 do while循环 do { // 循环体代码 - 条件表达式为 true 时重复执行循环体代码} while(条件表达式); 执行思路 先执行一次循环代码 在执行表达式，如果true,则继续执行循环体代码。如果false则退出后面循环 continue和breakcontinue用于立即跳出本次循环，继续下一次循环 braeak立即跳出整个循环","categories":[],"tags":[]},{"title":"","slug":"hello-world","date":"2021-01-02T07:16:27.177Z","updated":"2021-01-03T03:54:59.986Z","comments":true,"path":"2021/01/02/hello-world/","link":"","permalink":"http://example.com/2021/01/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}